#Tabla Usuario
sql.escribirUsuario= INSERT INTO Usuarios (nombre, apellido, email, password, atencionEsp, esAdmin) VALUES (?, ?, ?, ?, ?, ?)
sql.existeUsuario = select COUNT(*) from Usuarios where email = ?


#Tabla Asistente
sql.escribirAsistente = INSERT INTO Asistente (Nombre, Apellidos, Fecha_Nacimiento, Atencion_Especial) VALUES (?, ?, ?, ?)
sql.listarAsistentes = SELECT * FROM Asistente
sql.existeAsistente = SELECT COUNT(*) FROM Asistente where Id_persona = ?
sql.updateAsistente = UPDATE Asistente SET Nombre = ?, Apellidos = ?, Fecha_Nacimiento = ?, Atencion_Especial = ? WHERE Id_persona = ?
sql.existeNombreApellido = SELECT COUNT(*) FROM Asistente where Nombre = ? and Apellidos = ?
#Tabla Actividad
sql.escribirActividad = INSERT INTO Actividad (Nombre, nEducativo, hActividad, nParticipantes, nMonitores) VALUES (?, ?, ?, ?, ?)
sql.listarActividad = SELECT Actividad.*, COALESCE((SELECT GROUP_CONCAT(CONCAT(Monitor.Nombre, ' ', Monitor.Apellidos) SEPARATOR ', ') FROM Monitor_Actividad AS MC INNER JOIN Monitor ON MC.MonitorId = Monitor.Id WHERE MC.ActividadNombre = Actividad.Nombre), '0') AS MonitoresAsociados FROM Actividad
sql.existeActividad = SELECT COUNT(*) FROM Actividad where Nombre = ? 
#Tabla Campamento
sql.escribirCampamento = INSERT INTO Campamento (fechaInicio, fechaFin, nivelEducativo, numeroMaxAsistentes,monitorAsignado) VALUES (?, ?, ?, ?, ?)
sql.listarCampamento = SELECT c.*, IFNULL(GROUP_CONCAT(DISTINCT CONCAT(m.Nombre, ' ', m.Apellidos)  ORDER BY m.Nombre ASC SEPARATOR ', '), '0') AS Monitores, IFNULL(GROUP_CONCAT(DISTINCT a.Nombre ORDER BY a.Nombre ASC SEPARATOR ', '), '0') AS Actividades ,IFNULL (GROUP_CONCAT(DISTINCT mr.Nombre ORDER BY mr.Nombre ASC SEPARATOR ', '),'0')AS MonitoresResponsables FROM Campamento c LEFT JOIN Campamento_Actividad ca ON c.Id = ca.CampamentoId LEFT JOIN Actividad a ON ca.ActividadNombre = a.Nombre LEFT JOIN Monitor_Actividad ma ON a.Nombre = ma.ActividadNombre  LEFT JOIN Monitor m ON ma.MonitorId = m.Id  LEFT JOIN Monitor_Campamento mc ON c.Id = mc.CampamentoId LEFT JOIN Monitor mr ON mc.MonitorId = mr.Id GROUP BY c.Id, c.fechaInicio, c.fechaFin, c.nivelEducativo, c.NumeroMaxAsistentes, c.AsistentesInscritos
sql.listarCampamentosES = SELECT c.Id AS Id, c.fechaInicio, c.fechaFin, c.nivelEducativo, c.NumeroMaxAsistentes, GROUP_CONCAT(IFNULL (a.Nombre,0)) AS actividades, GROUP_CONCAT(IFNULL(CONCAT (m.Nombre, ' ', m.Apellidos),0)) AS Monitores FROM Campamento c LEFT JOIN Campamento_Actividad ca ON c.Id = ca.CampamentoId LEFT JOIN Actividad a ON ca.ActividadNombre = a.Nombre LEFT JOIN Monitor_Campamento mc ON c.Id = mc.CampamentoId LEFT JOIN Monitor m ON mc.MonitorId = m.Id WHERE monitorAsignado = 1 GROUP BY c.Id 
sql.fechaInicioCampamento = SELECT fechaInicio FROM Campamento WHERE Id = ?
#Tabla Inscripcion
sql.escribirInscripcion = INSERT INTO Inscripcion (Id_asistente, Id_campamento, Fecha_inscripcion, Precio, tipoRegistro) VALUES (?, ?, ?, ?, ?)
sql.listarInscripcion = SELECT * FROM Inscripcion 
sql.eliminarInscripcion = DELETE FROM Inscripcion WHERE Id_ins = ?
sql.listarcampamentosIns = SELECT * , (NumeroMaxAsistentes - AsistentesInscritos) AS "Plazas Libres" FROM Campamento WHERE DATE( fechaInicio ) > CURDATE( ) AND AsistentesInscritos < NumeroMaxAsistentes
sql.listarNumeroActividades = SELECT COUNT(*) FROM Campamento_Actividad WHERE CampamentoId = ?
sql.actualizarinscripcion = UPDATE Campamento SET AsistentesInscritos = AsistentesInscritos - 1 WHERE Id = (SELECT Id_campamento FROM Inscripcion WHERE Id_ins = ?)

#Tabla Monitor
sql.escribirMonitor = INSERT INTO Monitor (Nombre, Apellidos, Ed_Especial) VALUES (?, ?, ?)
sql.listarMonitor = SELECT * FROM Monitor
sql.listarMonitorES = SELECT * FROM Monitor WHERE Ed_Especial = 1
sql.existeMonitor= SELECT COUNT(*) FROM Monitor where Nombre = ? and Apellidos = ?


sql.asociarMonitorActividad = INSERT INTO Monitor_Actividad (MonitorId, ActividadNombre) VALUES (?, ?)
sql.comprobar.asociarMonitorActividad = Select distinct 1 from Asistente WHERE (SELECT COUNT(*) FROM Monitor_Actividad WHERE ActividadNombre = ?) < (SELECT nMonitores FROM Actividad WHERE Nombre = ?) 
sql.comprobar.asistenteCampamento = Select 1 from Inscripcion where Id_asistente = ? and Id_campamento = ?

sql.asociarActividadCampamento = INSERT INTO Campamento_Actividad (CampamentoId, ActividadNombre) VALUES (?, ?)
sql.asociarMonitorCampamento = INSERT INTO Monitor_Campamento (MonitorId, CampamentoId) VALUES (?, ?)
#Comprobadores para evitar datos duplicados
sql.existeActividadCampamento = SELECT CampamentoId, ActividadNombre FROM Campamento_Actividad  WHERE CampamentoId = ? AND ActividadNombre = ?
sql.existeMonitorActividad = SELECT COUNT(*) FROM Monitor WHERE Id = ?
sql.existeActividadMonitor = SELECT Monitor.Nombre AS NombreMonitor, Monitor.Apellidos AS ApellidosMonitor, Actividad.Nombre AS NombreActividad FROM Monitor INNER JOIN Monitor_Actividad ON Monitor.Id = Monitor_Actividad.MonitorId INNER JOIN Actividad ON Monitor_Actividad.ActividadNombre = Actividad.Nombre WHERE Monitor.Id = ? AND Actividad.Nombre = ?
sql.existeMonitorCampamento = SELECT DISTINCT ( 1 ) FROM Monitor m JOIN Monitor_Actividad ma ON m.Id = ma.MonitorId JOIN Actividad a ON ma.ActividadNombre = a.Nombre JOIN Campamento_Actividad ca ON a.Nombre = ca.ActividadNombre JOIN Campamento c ON ca.CampamentoId = c.Id WHERE c.Id =? AND m.Id =?
sql.comprobarMonitoresMax = Select distinct 1 from Asistente WHERE (SELECT COUNT(*) FROM Monitor_Actividad WHERE ActividadNombre = ?) < (SELECT nMonitores FROM Actividad WHERE Nombre = ?) 
sql.mismoNivelEducativo = SELECT 1 FROM Actividad a JOIN Campamento c ON a.nEducativo = c.nivelEducativo where a.Nombre = ? and c.Id = ?;


sql.actualizarAsistentes = UPDATE Campamento SET AsistentesInscritos = AsistentesInscritos + 1 WHERE Id = ?
sql.actualizarActividadCampamento = UPDATE RelacionCampamento SET id_campamento = ? WHERE nombre_actividad = ?
sql.insertarActividadCampamento = INSERT INTO RelacionCampamento (nombre_actividad, id_campamento) VALUES (?, ?)
sql.insertarMonitorCampamento = INSERT INTO RelacionCampamento (id_monitor, id_campamento) VALUES (?, ?)
